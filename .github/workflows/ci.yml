name: CI

on:
    push:
        branches: [ '*' ]
    pull_request:
        branches: [ '*' ]
    
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    
    Linting:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ['3.8', '3.9', '3.10']
        
        steps:
            -   uses: actions/checkout@v2
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}
                    
            -   uses: actions/cache@v2
                with:
                    path: ~/.cache/pip
                    key: ${{ runner.os }}-pip

            -   name: Install Dependencies
                run: |
                    python -m pip install --upgrade pip
                    make dev

            -   name: Lint with isort, black, docformatter, flake8
                run: |
                    make lint
    
    Documentation:
        needs: Linting
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ['3.8', '3.9', '3.10']
                
        steps:
            -   uses: actions/checkout@v2
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}
                    
            -   uses: actions/cache@v2
                with:
                    path: ~/.cache/pip
                    key: ${{ runner.os }}-pip
    
            -   name: Install Dependencies
                run: |
                    python -m pip install --upgrade pip
                    make dev
    
            -   name: Generate Docs
                run: |
                    make docs

    Build-Basic:
        needs: Documentation
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest] #, macos-latest]
                python-version: ['3.8', '3.9', '3.10']
                
        steps:
            -   uses: actions/checkout@v2
    
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}

            -   uses: actions/cache@v2
                with:
                    path: ~/.cache/pip
                    key: ${{ runner.os }}-pip
    
            -   name: Install Bare Dependencies
                run: |
                    pip install -e .
                    
            -   name: Test basic importing
                run: |
                    make test-basic

    Build:
        if:
            contains('
            refs/heads/main
            ', github.event.pull_request.base.ref)
        needs: Build-Basic
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest] #, macos-latest]
                python-version: ['3.8', '3.9', '3.10']
                
        steps:
            -   uses: actions/checkout@v2
    
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}

            -   uses: actions/cache@v2
                with:
                    path: ~/.cache/pip
                    key: ${{ runner.os }}-pip
    
            -   name: Install Dependencies
                run: |
                    pip install -e ".[all]"
                    
            -   name: Test with pytest
                run: |
                    make test-cov
            
            -   name: Upload to codecov.io
                uses: codecov/codecov-action@v1
                with:
                    file: ./coverage.xml
                    flags: unittests
                    name: codecov-umbrella
                    fail_ci_if_error: true
                    
#            -   name: Publish distribution ðŸ“¦ to PyPI
#                if: startsWith(github.event.ref, 'refs/tags')
#                env:
#                    PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
#                run: |
#                    poetry config pypi-token.pypi $PYPI_TOKEN
#                    poetry publish --build
